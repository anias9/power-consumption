//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace powerConsumptionWPF.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IPowerService")]
    public interface IPowerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPowerService/dailyConsuption", ReplyAction="http://tempuri.org/IPowerService/dailyConsuptionResponse")]
        double dailyConsuption(double price, int power, int number, int hours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPowerService/dailyConsuption", ReplyAction="http://tempuri.org/IPowerService/dailyConsuptionResponse")]
        System.Threading.Tasks.Task<double> dailyConsuptionAsync(double price, int power, int number, int hours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPowerService/monthlyConsuption", ReplyAction="http://tempuri.org/IPowerService/monthlyConsuptionResponse")]
        double monthlyConsuption(double price, int power, int number, int hours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPowerService/monthlyConsuption", ReplyAction="http://tempuri.org/IPowerService/monthlyConsuptionResponse")]
        System.Threading.Tasks.Task<double> monthlyConsuptionAsync(double price, int power, int number, int hours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPowerService/annualConsuption", ReplyAction="http://tempuri.org/IPowerService/annualConsuptionResponse")]
        double annualConsuption(double price, int power, int number, int hours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPowerService/annualConsuption", ReplyAction="http://tempuri.org/IPowerService/annualConsuptionResponse")]
        System.Threading.Tasks.Task<double> annualConsuptionAsync(double price, int power, int number, int hours);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPowerServiceChannel : powerConsumptionWPF.ServiceReference1.IPowerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PowerServiceClient : System.ServiceModel.ClientBase<powerConsumptionWPF.ServiceReference1.IPowerService>, powerConsumptionWPF.ServiceReference1.IPowerService {
        
        public PowerServiceClient() {
        }
        
        public PowerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PowerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PowerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PowerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double dailyConsuption(double price, int power, int number, int hours) {
            return base.Channel.dailyConsuption(price, power, number, hours);
        }
        
        public System.Threading.Tasks.Task<double> dailyConsuptionAsync(double price, int power, int number, int hours) {
            return base.Channel.dailyConsuptionAsync(price, power, number, hours);
        }
        
        public double monthlyConsuption(double price, int power, int number, int hours) {
            return base.Channel.monthlyConsuption(price, power, number, hours);
        }
        
        public System.Threading.Tasks.Task<double> monthlyConsuptionAsync(double price, int power, int number, int hours) {
            return base.Channel.monthlyConsuptionAsync(price, power, number, hours);
        }
        
        public double annualConsuption(double price, int power, int number, int hours) {
            return base.Channel.annualConsuption(price, power, number, hours);
        }
        
        public System.Threading.Tasks.Task<double> annualConsuptionAsync(double price, int power, int number, int hours) {
            return base.Channel.annualConsuptionAsync(price, power, number, hours);
        }
    }
}
